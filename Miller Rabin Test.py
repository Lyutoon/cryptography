from random import randint
from Crypto.Util.number import *

def Miller_Rabin(n):
    if n & 1 == 0 and n == 1:
        return False
    n_1 = n - 1
    k = 0
    m = n_1
    while (m & 1 == 0):
        m >>= 1
        k += 1
    tested = []
    # we can do this random algoritm at most n-1 rounds
    for _ in range(n - 1):
        a = randint(1, n-1)
        while a in tested:
            a = randint(1, n-1)
        tested.append(a)
        b = pow(a, m, n)
        if b == 1:
            return True
        for _ in range(k):
            if b == n_1:
                return True
            b = pow(b, 2, n)
        return False

n = 17397889783514961896483086953598763532351489220528091457321156197242696796790852403755978914874171206170837848120501786575309655483805803830620613743297776656564760846432682966162750327871152896811302809293167886526397211166649837047575765237482216974078807728902908338100163936053681694945358390189163179112628719562422887803517661727450414639444862050547664725192663274822397251293490755964767898140661528504879782380364478623121817524321484051307847497279910833326143578543191566066012100146947056419459797906018918465410663341843118614746568200081683099400746255691962446351173977076941302697770945000362490224529
if Miller_Rabin(n):
    print('[+] n is prime')
else:
    print('[+] n is composite')

